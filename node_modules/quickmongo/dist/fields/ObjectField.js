"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectField = void 0;
const model_1 = require("./model");
/**
 * @extends FieldModel
 */
class ObjectField extends model_1.FieldModel {
    /**
     * The object field model
     * @param {FieldModel} model the model
     * @param {FieldModelOptions} [options] The field model options
     */
    constructor(model, options) {
        super(options);
        this.model = model;
    }
    /**
     * Validates the data
     * @param {any} value The value to validate
     * @returns {boolean}
     */
    validate(value) {
        if (value === null) {
            throw new TypeError("'value' must not be 'null'");
        }
        if (typeof value !== "object") {
            throw new TypeError("'value' must be an 'object'");
        }
        const modelKeys = Object.keys(this.model);
        const testedKeys = [];
        modelKeys.forEach((key) => {
            this.model[key].validate(value[key]);
            testedKeys.push(key);
        });
        Object.keys(value).forEach((key) => {
            if (!testedKeys.includes(key)) {
                throw new RangeError(`'value' contains an unknown key '${key}'`);
            }
        });
        return true;
    }
}
exports.ObjectField = ObjectField;
